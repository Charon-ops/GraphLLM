URL: file://cdr.stanford.edu/pub/CDR/Publications/Reports/design-nav.ps
Refering-URL: http://cdr.stanford.edu/NextLink/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: petrie@sunrise.stanford.edu  park@sunrise.stanford.edu  
Title: DESIGN SPACE NAVIGATION AS A COLLABORATIVE AID  
Author: CHARLES PETRIE AND MARK CUTKOSKY AND HISUP PARK 
Date: August, 1994  
Note: Proceedings of the Third International Conference on Artificial Intelligence in Design, Lausanne,  
Address: 560 Panama Street Stanford, CA 94305-2232  Palo Alto, CA  
Affiliation: Center for Design Research Stanford University  Lockheed Missles and Space Co. Artificial Intelligence Center  
Abstract: The Redux 0 server is an agent, with no domain-specific knowledge, that provides generic coordination services to distributed design systems. The coordination is accomplished by a "wrapper" technique requiring relatively little modification of existing agents. Yet the coordination services significantly extend the usual "ask/tell" agent protocols. These advantages are obtained because the server is based on a simple and ubiquitous search-based model of design decisions. The central hypothesis is that routine design can be considered search and design agents can be coordinated by management of the search space. The Redux 0 services and the mapping to existing agents are illustrated here by describing how an existing distributed configuration design system, First-Link, is being developed into a new system, Next-Link, with additional functionality. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Bowen J. and Bahler D., </author> <title> "Task Coordination in Concurrent Engineering", Enterprise Integration Modeling, </title> <editor> C. Petrie, ed., </editor> <publisher> MIT Press, </publisher> <month> October, </month> <year> 1992. </year>
Reference-contexts: See Section 5.3. DESIGN SPACE NAVIGATION 5 is not a constraint manager and is indeed complementary to systems as <ref> (Bowen and Bahler, 1992) </ref> and (Darr, 1992). The Redux 0 model assumes that problem solvers are at least implicitly following this model of design decisions. These problem solvers can be viewed as design agents that send a Redux 0 server network messages about decisions and related types of objects.
Reference: <author> Darr T., Birmingham W., </author> <title> "Concurrent Engineering: An Automated Design Space Approach," </title> <type> Tech. Report CSE-TR-149-92, </type> <institution> U. of Michigan, </institution> <address> Ann Arbor, MI. </address>
Reference: <author> Finin, T., McKay, D., and Fritzson, R., </author> <title> "An Overview of KQML: A Knowledge Query and Manipulation Language," </title> <type> Technical Report, </type> <institution> Computer Science Dept., U. of Mary-land, </institution> <year> 1992. </year> <editor> Gebala, David and Steven Eppinger, </editor> <title> "Methods for Analyzing Design Procedures," </title> <booktitle> DE-Vol. 31, Design Theory and Methodology, ASME, </booktitle> <year> 1991. </year>
Reference-contexts: In concurrent engineering terms, the supertask isn't completed until the subtasks are. This basic design search control function is not explicitly present in the BASE protocol. It is also not a part of the basic KQML <ref> (Finin et al., 1992) </ref> protocol for distributed agents. This is an excellent task for a generic SHADE (Tenenbaum et al., 1992) facilitator such as a Redux 0 agent. As shown by the small thicker arrows in Figure 4, Redux 0 propagates the completion of tasks up the subtask tree.
Reference: <author> McGuire J. et al., "SHADE: </author> <title> A Medium for SHaring Design Knowledge among Engineering Tools", </title> <journal> Journal of Concurrent Engineering: Applications and Research (CERA), </journal> <note> to be published. </note>
Reference: <author> Park, H., M. R. Cutkosky, A.B. Conru and S-H Lee, </author> <title> "An Agent-Based Approach to Concurrent Cable Harness Design," </title> <journal> AI EDAM, </journal> <volume> 8, No. </volume> <pages> 3, </pages> <note> 1994 (in press). </note>
Reference-contexts: 1. Introduction The First-Link project in the Stanford Center for Design Research is sponsored by Lockheed 1 in order to develop a distributed system to design cable harnesses for aircraft <ref> (Park et al., 1994) </ref>, and as part of the SHARE (Toye et al. , 1993) project that is investigating computer support for distributed design. The design domain is typical of the generic configuration design task, but also tackles tough geometric modeling problems. <p> In this paper, we give specific examples of these notifications rather than the complete and abstract model. We also attempt to describe the behavior of the system in engineering terms rather than in formal search terms as is usual in computer science. 3. Next-Link Overview First-Link <ref> (Park et al., 1994) </ref> is a distributed aircraft cable harness design system. In this application, we want to configure the electrical cable bundles that run throughout modern aircraft.
Reference: <editor> Paulokat, J. and H. Ritzer, "Unterstuetzung der Kontrolle bei der Konfigurierung durch ein problemklassenspezifisches TMS," </editor> <booktitle> Proc. </booktitle> <volume> 2. </volume> <editor> Deutsche Tagung Expertensysteme (XPS-93), F. Puppe, A. Guenter (Eds), </editor> <publisher> Springer, </publisher> <year> 1993. </year>
Reference-contexts: Redux 0 Overview The Redux formal model and its application to various domains is described in (Petrie, 1991) and summarized in (Petrie, 1992). This work has been used to reimplement the model as a configuration engine at the Universitat Kaiserslautern in the domain of tool-setup planning <ref> (Paulokat and Ritzer, 1993) </ref>. goal G1 of Choose Motor for planar manipulator PL-1, an engineer makes a choice of motor-1.
Reference: <author> Petrie, C., </author> <title> "Planning and Replanning with Reason Maintenance," </title> <type> Dissertation. MCC TR EID-385-91, </type> <month> December, </month> <year> 1991. </year>
Reference-contexts: However, we will begin with an overview of Redux 0 to avoid too much dependence upon previous papers. 2. Redux 0 Overview The Redux formal model and its application to various domains is described in <ref> (Petrie, 1991) </ref> and summarized in (Petrie, 1992). This work has been used to reimplement the model as a configuration engine at the Universitat Kaiserslautern in the domain of tool-setup planning (Paulokat and Ritzer, 1993). goal G1 of Choose Motor for planar manipulator PL-1, an engineer makes a choice of motor-1.
Reference: <author> Petrie, C., </author> <title> "Constrained Decision Revision," </title> <booktitle> Proc. 10th Nat. Conf. on AI,San Jose pp. </booktitle> <pages> 393-400, </pages> <publisher> AAAI Press, </publisher> <month> July, </month> <year> 1992. </year>
Reference-contexts: A single platform version of this system is planned for commercial use next year. The prototype of the distributed design system has a simple agent interaction model that we are augmenting with Redux 0 (Petrie, 1993), an agent implementing a subset of the full Redux model described in <ref> (Petrie, 1992) </ref>. This new version, Next-Link, will have more sophisticated agent interactions, as described here. The Redux model is based upon AI problem solving notions of search spaces. Redux is a model of solving task/resource assignment problems with constraints and subgoaling. <p> However, we will begin with an overview of Redux 0 to avoid too much dependence upon previous papers. 2. Redux 0 Overview The Redux formal model and its application to various domains is described in (Petrie, 1991) and summarized in <ref> (Petrie, 1992) </ref>. This work has been used to reimplement the model as a configuration engine at the Universitat Kaiserslautern in the domain of tool-setup planning (Paulokat and Ritzer, 1993). goal G1 of Choose Motor for planar manipulator PL-1, an engineer makes a choice of motor-1. <p> Part of the decision rationale is a third difference between Redux and constraint-based approaches to design. In Redux, the rationale for backtracking is maintained and contributes to the optimality of a decision. In <ref> (Petrie, 1992) </ref>, we explain the novelty of this approach and why it is equivalent to tracking the Pareto optimality of a design solution. While a full explanation is beyond the scope of this paper, the example in Section 5.3 illustrates the utility of this functionality.
Reference: <author> Petrie, C., </author> <title> "The Redux' Server," </title> <booktitle> Proc. Internat. Conf. on Intelligent and Cooperative Information Systems (ICICIS), </booktitle> <address> Rotterdam, </address> <month> May, </month> <year> 1993. </year>
Reference-contexts: A single platform version of this system is planned for commercial use next year. The prototype of the distributed design system has a simple agent interaction model that we are augmenting with Redux 0 <ref> (Petrie, 1993) </ref>, an agent implementing a subset of the full Redux model described in (Petrie, 1992). This new version, Next-Link, will have more sophisticated agent interactions, as described here. The Redux model is based upon AI problem solving notions of search spaces. <p> We illustrate this notion with different aspects of design search in this paper. However, we will not emphasize Redux terminology or search notions. First, that has been done elsewhere <ref> (Petrie, 1993) </ref>. Second, it is more important that these search notions map onto engineering design process concepts than that they be explained in standard AI search terms. In Sec 1 This work was partially funded by Navy contract SHARE N00014-92-J-1833. <p> The output is other messages, representing the change propagation, sent to the user, or receptor daemons. This is shown schematically in Figure 2. The Redux 0 model propagates the dependencies associated with the various objects as described in the formal model <ref> (Petrie, 1993) </ref>. This results in notifications sent to either the applications or human designers that help to coordinate the design. In this paper, we give specific examples of these notifications rather than the complete and abstract model.
Reference: <author> Tenenbaum, J., J. Weber, and T. Gruber, </author> <title> "Enterprise Integration: Lessons from SHADE and PACT," Enterprise Integration Modeling. </title>
Reference: <author> Toye, G. et al., </author> <title> "SHARE: A Methodology and Environment for Collaborative Product Development", </title> <booktitle> Proc. 2nd WOrkshop on Enabling Technologies: Infrastructure for Collaborative Enterprises, </booktitle> <publisher> IEEE Computer Press, </publisher> <pages> pp. 33-47, </pages> <year> 1993. </year> <title> 7 We also plan to study reductions of design iterations along the lines of (Gebala and Eppinger, </title> <year> 1991) </year>
Reference-contexts: 1. Introduction The First-Link project in the Stanford Center for Design Research is sponsored by Lockheed 1 in order to develop a distributed system to design cable harnesses for aircraft (Park et al., 1994), and as part of the SHARE <ref> (Toye et al. , 1993) </ref> project that is investigating computer support for distributed design. The design domain is typical of the generic configuration design task, but also tackles tough geometric modeling problems. A single platform version of this system is planned for commercial use next year.
References-found: 11

